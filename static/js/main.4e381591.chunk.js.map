{"version":3,"sources":["Components/Nav.js","Components/Dlmode.js","Components/Form.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","concat","Mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","dist","aria-current","to","role","aria-labelledby","onClick","toggleMode","htmlFor","Dlmode","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","dlstyle","_useState3","_useState4","style","Form","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","lower","charAt","capital","msg","App","setMode","setAlert","_useState5","_useState6","message","setTimeout","body","setInterval","Components_Alert","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4e381591.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Nav(props) {\r\n  return (\r\n    <div>\r\n         <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n          \r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand fw-bold\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active text-danger\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link text-danger\" to=\"/dlmode\">About Me</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link text-danger\" href=\"/\">Business</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle text-danger\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Products\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">TDS</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">ERP</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">CRM</a></li>\r\n          </ul>\r\n        </li>\r\n\r\n      </ul>\r\n      {/*<form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form>*/}\r\n      <div className={`form-check form-switch text-${props.Mode ==='light'? 'Dark' : 'light'}`}>\r\n    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav> \r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Dlmode(props) {\r\n    const [dlstyle, setMydlstyle] = useState({\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    })\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleStyle=()=>{\r\n        if(dlstyle.color ==='white'){\r\n            setMydlstyle({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setMydlstyle({\r\n                color:'white',\r\n                backgroundColor:'black'\r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }\r\n    }\r\n    // let dlstyle= {\r\n    //     color: props.mode === 'dark'?'white':'black',\r\n    //     backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white'\r\n    // }\r\n  return (\r\n            <div className='container' style={dlstyle}>\r\n                <h1 className='my-3'>Dark & Light Mode</h1>\r\n            <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\" style={dlstyle}>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n            <button className=\"accordion-button\" style={dlstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n            <strong>About Company</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n            <div className=\"accordion-body\" style={dlstyle}>\r\n                This is the first item's accordion body. It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={dlstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\r\n            <strong>About Company</strong>\r\n\r\n            </button>\r\n            </h2>\r\n            <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\r\n            <div className=\"accordion-body\" style={dlstyle}>\r\n                This is the second item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={dlstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\r\n            <strong>About Company</strong>\r\n\r\n            </button>\r\n            </h2>\r\n            <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\r\n            <div className=\"accordion-body\" style={dlstyle}>\r\n                This is the third item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n       \r\n            </div>\r\n        )\r\n        }\r\n","import React, {useState} from 'react'//Import React Hooks\r\n\r\nexport default function Form(props) {\r\n    const ToUpperCase =() =>{\r\n       // console.log('Convert Into ToUpperCase'+ text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted To Uppercase\", \"success\");\r\n    }\r\n    const ToLowerCase =() =>{\r\n      // console.log('Convert Into ToUpperCase'+ text)\r\n       let newText = text.toLowerCase();\r\n       setText(newText)\r\n       props.showAlert(\"Converted To Lowercase\", \"success\")\r\n   }\r\n   const clear =() =>{\r\n    // console.log('Convert Into ToUpperCase'+ text)\r\n     let newText = text.slice(text.length);\r\n     setText(newText)\r\n     props.showAlert(\"Text Has Been Cleard\", \"success\")\r\n }\r\n\r\n const copy = () => {\r\n  var text = document.getElementById(\"Textarea1\");\r\n  text.select();\r\n  navigator.clipboard.writeText(text.value);\r\n  props.showAlert(\"Copied To Clipboard\", \"success\")\r\n}\r\nconst RemoveExtraSpaces = () => {\r\n  let newText = text.split(/[ ]+/);\r\n  setText(newText.join(\" \"))\r\n  props.showAlert(\"Spaces Has Been Removed\", \"success\")\r\n}\r\n  const OnChange =(event) =>{\r\n       // console.log('OnChange')\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('');// React Hooks\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.Mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text}  onChange={OnChange} style={{backgroundColor: props.Mode ==='dark'? '#13466e': 'white', color: props.Mode==='dark' ? 'white':'black'}} id=\"Textarea1\" rows=\"7\"></textarea>\r\n</div>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={ToUpperCase}>Convert To Upper Case</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={ToLowerCase}>Convert To Lower Case</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={clear}>Clear Text</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={copy}>Copy Text</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={RemoveExtraSpaces}>Remove Extra Spaces</button>\r\n</div>\r\n   \r\n    <div className=\"container my-3\" style={{color: props.Mode==='dark'?'white':'black'}}>\r\n    <h1>WordCounter</h1>\r\n    <p>{text.split(\"/\\s+/\").filter((element)=>{return element.length!==0}).length} Words & {text.length} Characters</p>\r\n    <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minuits Read</p>\r\n    <h3>Preview</h3>\r\n    <p><strong>{text.length>0?text:\"~Text Preview~\"}</strong></p>\r\n    </div>\r\n   \r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n   const capital =(word)=>{\r\n   const lower = word.toLowerCase();\r\n   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   <div style={{height:'50px'}}>\r\n     {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capital(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport Nav from \"./Components/Nav\";\nimport Dlmode from './Components/Dlmode';\nimport Form from \"./Components/Form\";\nimport React, {useState} from 'react'\nimport Alert from \"./Components/Alert\";\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\"\n\n\n\nfunction App() { \n const[Mode, setMode] = useState('light');\n const[alert, setAlert] = useState(null);\n const[Mode1, setMode1] =useState('black');\n\n const showAlert =(message, type)=>{\n            setAlert({\n              msg: message,\n              type: type\n            })\n            setTimeout(()=>{\n             setAlert(null);\n            }, 3000); \n }\n  const toggleMode = () => {\n    if (Mode === 'light') {\n        setMode('dark');\n        document.body.style.backgroundColor = 'black';\n        showAlert(\"Dark Mode Has Been Enabled\",\"success\");\n        document.title = 'Edtech- Dark Mode';\n        setInterval(()=>{\n        document.title = 'Edtech- Text Converter';\n        },2000)\n        setInterval(()=>{\n          document.title = 'Install- Text Converter';\n          },1500)\n       }\n    else {\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light Mode Has Been Enabled\",\"success\");\n        document.title = 'Edtech- Light Mode';\n    }\n};\n  return (\n    <>\n    <Router>\n      <Nav title=\"Edtech\" Mode={Mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n         \n          <Routes Mode={Mode}>\n          <Route exact path=\"/dlmode\" element={<Dlmode/>}/>\n          <Route exact path=\"/\" element={<Form heading=\"Enter Your Data\" showAlert={showAlert} Mode={Mode}/>}/>     \n          \n          </Routes>\n      </div>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}